{"version":3,"sources":["./src/app/create-checklistform/create-checklistform.component.html","./src/app/create-checklistform/create-checklistform.component.scss","./src/app/create-checklistform/create-checklistform.component.ts","./src/app/create-checklistform/create-checklistform.module.ts","./src/app/create-checklistform/create-checklistform.routing.ts"],"names":[],"mappings":"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","file":"create-checklistform.module.chunk.js","sourcesContent":["module.exports = \"\\n<style>\\n     .dropdownview {\\n        -webkit-appearance: menulist-button;\\n    }\\n\\n     /*Copied from user*/\\n\\n    :focus {\\n        outline: none;\\n    }\\n\\n    .radio {\\n        -webkit-appearance: button;\\n        -moz-appearance: button;\\n        appearance: button;\\n        border: 4px solid #ccc;\\n        border-top-color: #bbb;\\n        border-left-color: #bbb;\\n        background: #fff;\\n        width: 35px;\\n        height: 35px;\\n        border-radius: 50%;\\n        outline: none !important;\\n    }\\n\\n        .radio:checked {\\n            border: 10px solid #e91e63;\\n        }\\n\\n    .dropdownview {\\n        -webkit-appearance: menulist-button;\\n    }\\n\\n    #btnSync {\\n        margin: 10px -17px;\\n    }\\n\\n    .strike-through-text {\\n        color: #ff0000;\\n    }\\n\\n    td {\\n        position: relative;\\n    }\\n\\n    tr.strikeout td:before {\\n        content: \\\" \\\";\\n        position: absolute;\\n        top: 47%;\\n        left: 0;\\n        border-bottom: 1px solid #ff0000;\\n        width: 100%;\\n    }\\n\\n    #td-actions:before {\\n        content: \\\" \\\";\\n        position: absolute;\\n        top: 50%;\\n        left: 0;\\n        border-bottom: none;\\n        width: 100%;\\n    }\\n\\n    .switch {\\n        position: relative;\\n        display: inline-block;\\n        width: 60px;\\n        height: 34px;\\n    }\\n\\n        .switch input {\\n            display: none;\\n        }\\n\\n    .slider {\\n        position: absolute;\\n        cursor: pointer;\\n        top: 11px;\\n        left: 0;\\n        right: 0;\\n        bottom: -12px;\\n        background-color: #ccc;\\n        -webkit-transition: .4s;\\n        transition: .4s;\\n    }\\n\\n        .slider:before {\\n            position: absolute;\\n            content: \\\"\\\";\\n            height: 26px;\\n            width: 26px;\\n            left: 4px;\\n            bottom: 4px;\\n            background-color: white;\\n            -webkit-transition: .4s;\\n            transition: .4s;\\n        }\\n\\n    input:checked + .slider {\\n        background-color: #4caf50;\\n    }\\n\\n    input:focus + .slider {\\n        box-shadow: 0 0 1px darkviolet;\\n    }\\n\\n    input:checked + .slider:before {\\n        -webkit-transform: translateX(26px);\\n        -ms-transform: translateX(26px);\\n        transform: translateX(26px);\\n    }\\n\\n    /* Rounded sliders */\\n    .slider.round {\\n        border-radius: 34px;\\n    }\\n\\n        .slider.round:before {\\n            border-radius: 50%;\\n        }\\n\\n    .wizard-card .info-text {\\n        text-align: center;\\n        margin: -13px 0 30px !important;\\n    }\\n\\n    .dropdown-menu li > a:hover {\\n        background-color: #4caf50;\\n        cursor: pointer;\\n    }\\n\\n         /*Copied from user*/\\n    .wizard-card {\\n         min-height: auto;\\n    }\\n</style>\\n\\n<title>Create Form</title>\\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-content\\\">\\n                        <h3 class=\\\"card-title\\\">Create Form - {{chklistformStatus}}</h3>\\n                        <div class=\\\"row\\\"> </div>\\n                        <div class=\\\"toolbar\\\">\\n                        </div>\\n                        <form [formGroup]=\\\"chklistForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"displayFieldCss(chklistForm, 'formname')\\\">\\n                                        <label class=\\\"control-label\\\">\\n                                            Form Name\\n                                            <small>(required)</small>\\n                                        </label>\\n                                        <input name=\\\"formname\\\" class=\\\"form-control\\\" formControlName=\\\"formname\\\" />\\n                                        <app-field-error-display [displayError]=\\\"isFieldValid(chklistForm, 'formname')\\\" errorMsg=\\\"Form Name is required\\\">\\n                                        </app-field-error-display>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">\\n                                            Form Description\\n                                        </label>\\n                                        <input name=\\\"formDescription\\\" class=\\\"form-control\\\" formControlName=\\\"formDescription\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">\\n                                            Select WO\\n                                            <small>(if left blank will be available to all WOs)</small>\\n                                        </label>\\n                                        <input ngui-auto-complete formControlName=\\\"workOrdNo\\\" name=\\\"workOrdNo\\\" [source]=\\\"autoWorkOrdList\\\" value-property-name=\\\"ID\\\"\\n                                               display-property-name=\\\"WorkOrderNo\\\" [list-formatter]=\\\"myListFormatter\\\" class=\\\"form-control\\\"\\n                                               (valueChanged)=\\\"valueChanged($event)\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-3 pull-right\\\">\\n                                    <button class=\\\"btn btn-success\\\" (click)=\\\"createChecklistForm('3')\\\">Save</button>\\n                                    <span [hidden]=\\\"hidebutton\\\">\\n                                        <button class=\\\"btn btn-success\\\" (click)=\\\"createChecklistForm('1')\\\">Submit</button>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\" [hidden]=\\\"hideTask\\\">\\n                                <div class=\\\"pull-right\\\">\\n                                    <button data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" class=\\\"btn btn-simple btn-icon pull-right\\\" matTooltip=\\\"Add new Task\\\" [matTooltipPosition]=\\\"'left'\\\"> <i class=\\\"more-less glyphicon glyphicon-plus\\\" style=\\\"color:black;\\\"></i> </button>\\n                                </div>\\n                               <div class=\\\"col-sm-12\\\" style=\\\"background-color:white;\\\">\\n                                    <div class=\\\"table-responsive\\\">\\n                                        <table class=\\\"table table-bordered  table-hover\\\" style=\\\"float:left !important;margin-bottom:0\\\">\\n                                          <tr *ngFor=\\\"let task of checklistFormTaskList\\\">\\n                                                <td>{{task.Task}}</td>\\n                                                <td class=\\\"text-center\\\">\\n                                                    <!--<button class=\\\"btn btn-simple btn-warning btn-icon edit\\\" (click)=\\\"viewWorkOrderAssignment(workAsg.ID)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">al i <i class=\\\"material-icons\\\">dvr</i> </button>-->\\n                                                    <i class=\\\"fa fa-close\\\" style=\\\"cursor: pointer;color:red;\\\" (click)=\\\"deleteTask(task.ID)\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\"></i>\\n                                                </td>\\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"pull-right\\\">\\n                                    <label class=\\\"switch\\\">\\n                                        <input type=\\\"checkbox\\\" [attr.disabled] =\\\"chklistformStatus == 'Draft' ? '' : null\\\" (change)=\\\"updateCheckListFormStatus()\\\" formControlName=\\\"chkActive\\\" id=\\\"chkAct\\\">\\n                                        <span class=\\\"slider round\\\"></span>\\n                                    </label>\\n                                    <span class=\\\"switch-title\\\" style=\\\"font-size:18px;letter-spacing:1px;\\\">Form is <span id=\\\"divAct\\\">{{ chklistformStatus }}</span></span>\\n                                   <br>\\n                                </div>\\n                                <br />\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Classic Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\"  role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <form [formGroup]=\\\"formTask\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"> <i class=\\\"material-icons\\\">clear</i> </button>\\n                            <h4 class=\\\"modal-title\\\">Add New Task</h4>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-12\\\">\\n                                    <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"displayFieldCss(formTask, 'taskdetail')\\\">\\n                                        <label class=\\\"control-label\\\">Add task details here</label>\\n                                        <textarea class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"50\\\" id=\\\"taskdetail\\\" formControlName=\\\"taskdetail\\\"></textarea>\\n                                        <app-field-error-display [displayError]=\\\"isFieldValid(formTask, 'taskdetail')\\\" errorMsg=\\\"Task is required.\\\"> </app-field-error-display>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <br />\\n                                <div class=\\\"pull-right\\\">\\n                                    <button type=\\\"submit\\\" id=\\\"btnSubmit\\\" class=\\\"btn btn-success\\\" (click)=\\\"createNewTask()\\\">Submit</button> <!--[disabled]=\\\"(isWoStatus == 'Created' || isWoStatus == null)? '':true\\\"-->\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n            </form>\\n    </div>\\n</div>\\n<!--  End Modal -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/create-checklistform/create-checklistform.component.html\n// module id = ./src/app/create-checklistform/create-checklistform.component.html\n// module chunks = create-checklistform.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/create-checklistform/create-checklistform.component.scss\n// module id = ./src/app/create-checklistform/create-checklistform.component.scss\n// module chunks = create-checklistform.module","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Http, Response, RequestOptions, Headers } from \"@angular/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute, Params } from '@angular/router';\nimport \"rxjs/Rx\";\nimport { CommonService } from \"../services/commonService\";\nimport { ChecklistFormService } from \"../services/checklistformService\";\nimport { MaintenanceService } from \"../services/maintenanceService\";\nimport swal from 'sweetalert2';\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-create-checklistform',\n    templateUrl: './create-checklistform.component.html',\n    styleUrls: ['./create-checklistform.component.scss'],\n    providers: [CommonService, MaintenanceService, ChecklistFormService]\n})\nexport class CreateChecklistformComponent implements OnInit, AfterViewInit {\n\n    public chklistForm = new FormGroup({\n        formname: new FormControl(),\n        formDescription: new FormControl(),\n        workOrdNo: new FormControl(),\n        taskdetail: new FormControl(),\n        chkActive: new FormControl()\n    });\n\n    public formTask = new FormGroup({\n        taskdetail: new FormControl()\n    });\n\n\n    public chklistformStatus: any;\n    public autoWorkOrdList: any;\n    public selectedWOrd: any;\n    public chkfomrId: any;\n    public hidebutton = true;\n    public checkformData: any;\n    public checklistFormTaskList; any;\n    public fieldArray: any;\n    public newAttribute: any;\n    public hideTask: boolean = true;\n    public userProfile: any;\n\n    constructor(\n        private http: Http,\n        private router: Router,\n        private commonService: CommonService,\n        private checklistformService: ChecklistFormService,\n        private maintenanceService: MaintenanceService,\n        private activatedRoute: ActivatedRoute,\n        private formBuilder: FormBuilder\n    ) { }\n\n    ngOnInit() {\n        if (JSON.parse(sessionStorage.getItem('LogEmployee')) != null) {\n            this.userProfile = JSON.parse(sessionStorage.getItem('LogEmployee'));\n            this.getWorkOrders();\n            this.activatedRoute.queryParams.subscribe((params: Params) => {\n                if (params['chkfomrid'] == undefined) {\n                    this.chklistformStatus = 'Draft';\n                }\n                else {\n                    this.chkfomrId = params['chkfomrid'];\n                    this.getChecklistForm(this.chkfomrId);\n                    this.getTasks(this.chkfomrId);\n                    this.hidebutton = false;\n                    this.hideTask = false;\n                }\n            });\n\n            this.chklistForm = this.formBuilder.group({\n                workOrdNo: ['', Validators.nullValidator],\n                formname: ['', Validators.required],\n                formDescription: ['', Validators.required],\n                chkActive: null\n            });\n\n            this.formTask = this.formBuilder.group({\n                taskdetail: ['', Validators.required]\n            });\n\n        } else {\n            this.router.navigate(['pages/login']);\n        }\n    }\n\n    ngAfterViewInit() {\n\n    }\n\n    addFieldValue() {\n        this.fieldArray.push(this.newAttribute)\n        this.newAttribute = {};\n    }\n\n    deleteFieldValue(index) {\n        this.fieldArray.splice(index, 1);\n    }\n\n    isFieldValid(form: FormGroup, field: string) {\n        return !form.get(field).valid && form.get(field).touched;\n    }\n\n    displayFieldCss(form: FormGroup, field: string) {\n        return {\n            'has-error': this.isFieldValid(form, field),\n            'has-feedback': this.isFieldValid(form, field)\n        };\n    }\n\n    showSwal(text: string) {\n        swal({\n            type: 'success',\n            text: text,\n            buttonsStyling: false,\n            confirmButtonClass: 'btn btn-success'\n\n        }).then(() => {\n            this.router.navigate(['checklist-form']);\n        })\n    }\n\n    showStaySwal(text: string) {\n        swal({\n            type: 'success',\n            text: text,\n            buttonsStyling: false,\n            confirmButtonClass: 'btn btn-success'\n\n        }).catch(swal.noop);\n    }\n\n    getWorkOrders() {\n        $('.loader').show();\n        this.maintenanceService.GetWorkOrderForMaintenance(this.commonService.baseApiUrl, this.userProfile.ID).subscribe(\n            data => {\n                var dataUsers = JSON.stringify(data);\n                var userParse = JSON.parse(dataUsers);\n                var userInfo = JSON.parse(userParse[\"_body\"]);\n                if (userInfo != null) {\n                    this.autoWorkOrdList = userInfo;\n                    $('.loader').hide();\n                }\n            });\n    }\n\n    createChecklistForm(status: string) {\n        if (this.chklistForm.controls[\"workOrdNo\"].value == undefined || this.chklistForm.controls[\"workOrdNo\"].value == '') {\n            this.selectedWOrd = undefined\n        }\n        $('.loader').show();\n        if (this.chklistForm.valid) {\n            var crntUsr = JSON.parse(sessionStorage.getItem('LogEmployee'));\n            var contact = {\n                ID: this.chkfomrId == undefined ? '0' : this.chkfomrId,\n                FormName: this.chklistForm.controls[\"formname\"].value,\n                Description: this.chklistForm.controls[\"formDescription\"].value,\n                WorkOrderID: this.selectedWOrd == undefined ? null : this.selectedWOrd.ID,\n                LastUpdated: null,\n                UpdatedBy: crntUsr.ID,\n                Status: status\n            };\n\n            this.checklistformService.CreateCheckListForm(this.commonService.baseApiUrl, contact).subscribe(\n                data => {\n                    var dataForm = JSON.stringify(data);\n                    var formParse = JSON.parse(dataForm);\n                    var formInfo = JSON.parse(formParse[\"_body\"]);\n                    if (formInfo != -1) {\n\n                        if (this.chkfomrId != undefined) {\n                            if (status == '1') {\n                                var checkListData = {\n                                    ChecklistFormID: this.chkfomrId,\n                                    WorkOrderID: this.selectedWOrd == undefined ? null : this.selectedWOrd.ID,\n                                    IsLatest: 1\n                                };\n                                this.checklistformService.CreateChecklistFormWorkOrderAssignment(this.commonService.baseApiUrl, this.userProfile.ID, checkListData).subscribe(\n                                    data => {\n                                        var dataAForm = JSON.stringify(data);\n                                        var formAParse = JSON.parse(dataAForm);\n                                        var formAInfo = JSON.parse(formAParse[\"_body\"]);\n                                        if (formAInfo == true) {\n                                            $('.loader').hide();\n                                            this.showSwal(\"Form updated successfully!!\");\n                                        }\n                                    });\n                            }\n                        }\n                        else {\n                            this.showSwal(\"Form created successfully!!\");\n                        }\n                    }\n                });\n        }\n        else {\n            $('.loader').hide();\n            this.validateAllFormFields(this.chklistForm);\n        }\n    }\n\n    updateCheckListFormStatus() {\n        $('.loader').show();\n        if (this.chklistForm.valid) {\n            var crntUsr = JSON.parse(sessionStorage.getItem('LogEmployee'));\n            var contact = {\n                ID: this.chkfomrId,\n                LastUpdated: null,\n                UpdatedBy: crntUsr.ID,\n                Status: this.chklistForm.controls[\"chkActive\"].value == true ? 1 : 2\n            };\n            this.checklistformService.UpdateCheckListFormStatus(this.commonService.baseApiUrl, contact).subscribe(\n                data => {\n                    var dataForm = JSON.stringify(data);\n                    var formParse = JSON.parse(dataForm);\n                    var formInfo = JSON.parse(formParse[\"_body\"]);\n                    if (formInfo == true) {\n                        $('.loader').hide();\n                        this.showSwal(\"Form updated successfully!!\");\n                    }\n                });\n        }\n        else {\n            $('.loader').hide();\n            this.validateAllFormFields(this.chklistForm);\n        }\n    }\n\n    getChecklistForm(contact: any) {\n        $('.loader').show();\n        return this.checklistformService.GetCheckListFormByID(this.commonService.baseApiUrl, contact).subscribe(\n            data => {\n                var dataMt = JSON.stringify(data);\n                var mTParse = JSON.parse(dataMt);\n                var mTList = JSON.parse(mTParse[\"_body\"]);\n                if (mTList != null) {\n                    this.checkformData = mTList;\n                    var elems = document.querySelectorAll(\".label-floating\");\n                    if (elems != null) {\n                        [].forEach.call(elems, function (el) {\n                            el.classList.remove(\"is-empty\");\n                        });\n                    }\n                    if (this.checkformData.WorkOrderID != null) {\n                        this.filterItem(this.checkformData.WorkOrderID);\n                        this.chklistForm.controls[\"workOrdNo\"].setValue(this.selectedWOrd.WorkOrderNo);\n                    }\n                    else {\n                        this.selectedWOrd = undefined;\n                    }\n                    this.chklistForm.controls[\"formname\"].setValue(this.checkformData.FormName);\n                    this.chklistForm.controls[\"formDescription\"].setValue(this.checkformData.Description);\n                    this.chklistForm.controls[\"chkActive\"].setValue(this.checkformData.Status == 1 ? true : false);\n                    this.chklistformStatus = this.checkformData.Status == 1 ? \"Active\" : (this.checkformData.Status == 2 ? \"InActive\" : \"Draft\");\n                    $('.loader').hide();\n                }\n            }\n        );\n    }\n\n    createNewTask() {\n        $('.loader').show();\n        if (this.formTask.valid) {\n            var contact = {\n                ID: 0,\n                ChecklistFormVersionID: null,\n                Task: this.formTask.controls[\"taskdetail\"].value,\n                TaskOrder: 0\n            };\n            console.log(contact);\n            this.checklistformService.CreateNewTask(this.commonService.baseApiUrl, this.chkfomrId + '-' + JSON.parse(sessionStorage.getItem('LogEmployee')).ID, contact).subscribe(\n                data => {\n                    var dataUsers = JSON.stringify(data);\n                    var userParse = JSON.parse(dataUsers);\n                    var userInfo = JSON.parse(userParse[\"_body\"]);\n                    $('#myModal').modal('toggle');\n                    if (userInfo == 1) {\n                        //this.getWorkOrderAssignment(localStorage.getItem(\"WorkOrderId\"));\n                        this.showStaySwal(\"New Task Created.\");\n                        this.getTasks(this.chkfomrId);\n                    }\n                    else if (userInfo == \"already\") {\n                        this.showSwal(\"Work Order already assigned!!\");\n                    }\n                    this.formTask.reset();\n                    $('.loader').hide();\n                });\n        }\n        else {\n\n        }\n    }\n\n    deleteTask(taskId: any) {\n        swal({\n            title: 'Are you sure?',\n            text: 'You will not be able to revert this!',\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonClass: 'btn btn-success',\n            cancelButtonClass: 'btn btn-danger',\n            confirmButtonText: 'Yes, delete it!',\n            buttonsStyling: false\n        }).then(() => {\n            $('.loader').show();\n            this.checklistformService.DeleteCheckListFormTask(this.commonService.baseApiUrl, taskId).subscribe(\n                data => {\n                    var dataUsers = JSON.stringify(data);\n                    var userParse = JSON.parse(dataUsers);\n                    var userInfo = JSON.parse(userParse[\"_body\"]);\n                    if (userInfo == true) {\n                        this.getTasks(this.chkfomrId);\n                        $('.loader').hide();\n                        swal({\n                            title: 'Deleted!',\n                            text: 'User has been deleted.',\n                            type: 'success',\n                            confirmButtonClass: 'btn btn-success',\n                            buttonsStyling: false\n                        }).catch(swal.noop);\n                    }\n                });\n        }).catch(swal.noop);\n    }\n\n    getTasks(chkformId: any) {\n        $('.loader').show();\n        this.checklistformService.GetTasksByFormID(this.commonService.baseApiUrl, chkformId).subscribe(\n            data => {\n                var datawAsg = JSON.stringify(data);\n                var wAsgParse = JSON.parse(datawAsg);\n                var wAsgList = JSON.parse(wAsgParse[\"_body\"]);\n                this.checklistFormTaskList = null;\n                if (wAsgList != null && wAsgList.length > 0) {\n                    this.checklistFormTaskList = wAsgList;\n                }\n                else {\n\n                }\n            }\n        );\n    }\n\n    public myListFormatter(data: any): string {\n        return data['WorkOrderNo'];\n    }\n\n    valueChanged(newVal) {\n        this.selectedWOrd = newVal;\n    }\n\n    filterItem(value) {\n        if (this.autoWorkOrdList == null) {\n            this.getWorkOrders();\n        }\n        else {\n            var dataMt = JSON.stringify(Object.assign([], this.autoWorkOrdList).filter(item => item.ID == value));\n            var mTParse = JSON.parse(dataMt);\n            this.selectedWOrd = mTParse[0];\n            //this.selectedWOrd = mTParse[0].WorkOrderNo;\n        }\n    }\n\n    validateAllFormFields(formGroup: FormGroup) {\n        Object.keys(formGroup.controls).forEach(field => {\n            const control = formGroup.get(field);\n            if (control instanceof FormControl) {\n                control.markAsTouched({ onlySelf: true });\n            } else if (control instanceof FormGroup) {\n                this.validateAllFormFields(control);\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/create-checklistform/create-checklistform.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreateChecklistFormRoutes } from './create-checklistform.routing';\nimport { CreateChecklistformComponent } from './create-checklistform.component';\nimport { MaterialModule } from '../app.module';\nimport { NguiAutoCompleteModule } from '@ngui/auto-complete';\nimport { Ng2AutoCompleteModule } from 'ng2-auto-complete';\nimport { MdModule } from '../md/md.module';\nimport { FieldErrorDisplayModule } from '../field-error-display/field-error-display.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(CreateChecklistFormRoutes),\n        FormsModule,\n        ReactiveFormsModule,\n        MdModule,\n        MaterialModule,\n        NguiAutoCompleteModule,\n        Ng2AutoCompleteModule,\n        FieldErrorDisplayModule\n    ],\n    declarations: [\n        CreateChecklistformComponent\n    ]\n})\n\nexport class CreateChecklistformModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/create-checklistform/create-checklistform.module.ts","import { Routes } from '@angular/router';\nimport { CreateChecklistformComponent } from './create-checklistform.component';\n\nexport const CreateChecklistFormRoutes: Routes = [\n    {\n        path: '',\n        children: [{\n            path: '',\n            component: CreateChecklistformComponent\n        }]\n    }\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/create-checklistform/create-checklistform.routing.ts"],"sourceRoot":"webpack:///"}