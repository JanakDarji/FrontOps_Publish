{"version":3,"sources":["./src/app/reset-password/reset-password.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.module.ts","./src/app/reset-password/reset-password.routing.ts"],"names":[],"mappings":"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","file":"reset-password.module.chunk.js","sourcesContent":["module.exports = \"<style>\\r\\n    .footer-text {\\r\\n        background-color: white;\\r\\n        color: #e91e63;\\r\\n        font-weight: 400;\\r\\n        font-size: 12px;\\r\\n    }\\r\\n\\r\\n    .full-page:before {\\r\\n        background-color: white;\\r\\n    }\\r\\n</style>\\r\\n<title>Aspect Reset Your Password</title>\\r\\n<div class=\\\"wrapper wrapper-full-page\\\" *ngIf=\\\"isRequest == true\\\">\\r\\n    <div class=\\\"full-page login-page\\\" filter-color=\\\"black\\\">\\r\\n        <!--  you can change the color of the filter page using: data-color=\\\"blue | purple | green | orange | red | rose \\\" -->\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\" style=\\\"margin-bottom:38px\\\">\\r\\n                        <img src=\\\"../../../assets/img/flags/Logo.png\\\" class=\\\"text-center img-responsive\\\" />\\r\\n                    </div><br />\\r\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\r\\n                        <form [formGroup]=\\\"resetReq\\\">\\r\\n                            <div class=\\\"card card-login card-hidden\\\">\\r\\n                                <div class=\\\"card-header text-center\\\" data-background-color=\\\"rose\\\">\\r\\n                                    <h4 class=\\\"card-title\\\">Enter your email here</h4>\\r\\n                                </div>\\r\\n                                <p class=\\\"category text-center\\\">\\r\\n                                    <!--Or Be Classical-->\\r\\n                                </p>\\r\\n                                <div class=\\\"card-content\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">email</i>\\r\\n                                        </span>\\r\\n                                        <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"displayFieldCss(resetReq, 'email')\\\">\\r\\n                                            <label class=\\\"control-label\\\">Email address</label>\\r\\n                                            <input type=\\\"email\\\" class=\\\"form-control\\\"\\r\\n                                                   pattern=\\\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$\\\" formControlName=\\\"email\\\">\\r\\n                                            <app-field-error-display [displayError]=\\\"isFieldValid(resetReq, 'email')\\\" errorMsg=\\\"Email is required and format should be name@companyname.com.au\\\">\\r\\n                                            </app-field-error-display>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"footer pull-right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-rose btn-simple btn-wd btn-lg\\\" (click)=\\\"resetRequest()\\\" style=\\\"min-width:inherit;\\\">Send Email</button>\\r\\n                                </div><br /><br />\\r\\n                                <div class=\\\"col-md-1\\\"></div>\\r\\n                                <div class=\\\"col-md-2 pull-left\\\">\\r\\n                                    <a href=\\\"index.html#/pages/login\\\" class=\\\"btn btn-behance btn-simple btn-sm\\\" style=\\\"text-transform:none;font-size:13px\\\">Go back to login</a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <footer class=\\\"footer\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <nav>\\r\\n                    <div class=\\\"text-center\\\">\\r\\n                        <span class=\\\"footer-text\\\">\\r\\n                            Powered by Frontline Operations &copy; 2018\\r\\n                            <p>Version 0.1.22</p>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                <!--<p class=\\\"copyright pull-right\\\">\\r\\n                    &copy;\\r\\n                    {{test | date: 'yyyy'}}\\r\\n                    <a href=\\\"https://www.creative-tim.com\\\">Creative Tim</a>, made with love for a better web\\r\\n                </p>-->\\r\\n            </div>\\r\\n        </footer>\\r\\n        <!--<div class=\\\"full-page-background\\\" style=\\\"background-image: url(../../../assets/img/login.jpeg) \\\"></div>-->\\r\\n        <div class=\\\"full-page-background\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"wrapper wrapper-full-page\\\" *ngIf=\\\"isRequest == false\\\">\\r\\n    <div class=\\\"full-page login-page\\\" filter-color=\\\"black\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\" style=\\\"margin-bottom:38px\\\">\\r\\n                        <img src=\\\"../../../assets/img/flags/Logo.png\\\" class=\\\"text-center img-responsive\\\" />\\r\\n                    </div><br />\\r\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\r\\n                        <form [formGroup]=\\\"resetPwd\\\">\\r\\n                            <div class=\\\"card card-login card-hidden\\\">\\r\\n                                <div class=\\\"card-header text-center\\\" data-background-color=\\\"rose\\\">\\r\\n                                    <h4 class=\\\"card-title\\\">Reset Your Password</h4>\\r\\n                                </div>\\r\\n                                <p class=\\\"category text-center\\\">\\r\\n                                    <!--Or Be Classical-->\\r\\n                                </p>\\r\\n                                <div class=\\\"card-content\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                        </span>\\r\\n                                        <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"displayFieldCss(resetPwd, 'password')\\\">\\r\\n                                            <label class=\\\"control-label\\\">Password</label>\\r\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\r\\n                                            <app-field-error-display [displayError]=\\\"isFieldValid(resetPwd, 'password')\\\" errorMsg=\\\"Enter a valid password.\\\">\\r\\n                                            </app-field-error-display>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                        </span>\\r\\n                                        <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"displayFieldCss(resetPwd, 'confirmPassword')\\\">\\r\\n                                            <label class=\\\"control-label\\\">Confirmed Password</label>\\r\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\">\\r\\n                                            <app-field-error-display [displayError]=\\\"isFieldValid(resetPwd, 'confirmPassword')\\\" errorMsg=\\\"These passwords don't match. Try again!\\\">\\r\\n                                            </app-field-error-display>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"footer pull-right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-rose btn-simple btn-wd btn-lg\\\" (click)=\\\"resetPassword()\\\" style=\\\"min-width:inherit;\\\">Submit</button>\\r\\n                                </div><br /><br />\\r\\n                                <div class=\\\"col-md-1\\\"></div>\\r\\n                                <div class=\\\"col-md-2 pull-left\\\">\\r\\n                                    <a href=\\\"index.html#/pages/login\\\" class=\\\"btn btn-behance btn-simple btn-sm\\\" style=\\\"text-transform:none;font-size:13px\\\">Go to Login</a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <footer class=\\\"footer\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <nav>\\r\\n                    <div class=\\\"text-center\\\">\\r\\n                        <span class=\\\"footer-text\\\">\\r\\n                            Powered by Frontline Operations &copy; 2018\\r\\n                            <p>Version 0.1.22</p>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                {{test | date: 'yyyy'}}\\r\\n            </div>\\r\\n        </footer>\\r\\n        <!--<div class=\\\"full-page-background\\\" style=\\\"background-image: url(../../../assets/img/login.jpeg) \\\"></div>-->\\r\\n        <div class=\\\"full-page-background\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reset-password/reset-password.component.html\n// module id = ./src/app/reset-password/reset-password.component.html\n// module chunks = reset-password.module","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { PasswordValidation } from '../forms/validationforms/password-validator.component';\nimport { CommonService } from \"../services/commonService\";\nimport { UserService } from \"../services/userService\";\nimport { Http, Response, RequestOptions, Headers } from \"@angular/http\";\nimport swal from 'sweetalert2';\ndeclare var $: any;\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    providers: [CommonService, UserService]\n})\n\nexport class ResetPasswordComponent implements OnInit {\n    test: Date = new Date();\n    private toggleButton: any;\n    private sidebarVisible: boolean;\n    private nativeElement: Node;\n    public isRequest: any;\n    public requestToken: any;\n\n    public resetReq = new FormGroup({\r\n        email: new FormControl()\n    });\n    public resetPwd = new FormGroup({\r\n        password: new FormControl(),\n        confirmPassword: new FormControl()\n    });\n\n    constructor(private element: ElementRef,\n        private activatedRoute: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private http: Http,\n        private commonService: CommonService,\n        private userService: UserService,\n        private router: Router\n    ) {\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n\n    isFieldValid(form: FormGroup, field: string) {\r\n        return !form.get(field).valid && form.get(field).touched;\r\n    }\r\n\r\n    displayFieldCss(form: FormGroup, field: string) {\r\n        return {\r\n            'has-error': this.isFieldValid(form, field),\r\n            'has-feedback': this.isFieldValid(form, field)\r\n        };\r\n    }\n\n    showSwal(text: string) {\n        swal({\n            type: 'success',\n            //title: 'Good job!',\n            text: text,\n            buttonsStyling: false,\n            confirmButtonClass: 'btn btn-success'\n\n        }).catch(swal.noop);\n    }\n\n    ngOnInit() {\n        this.activatedRoute.queryParams.subscribe((params: Params) => {\r\n            if (params['token'] == undefined) {\r\n                this.isRequest = true;\r\n            }\r\n            else {\r\n                this.requestToken = params['token'];\r\n                this.isRequest = false;\r\n                this.isValidPasswordToken();\r\n            }\n        });\n\n        var navbar: HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n\n        setTimeout(function () {\n            // after 1000 ms we add the class animated to the login/register card\n            $('.card').removeClass('card-hidden');\n        }, 700);\n\n        this.resetReq = this.formBuilder.group({\r\n            email: [null, [Validators.required, Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$\")]]\r\n        });\n\n        this.resetPwd = this.formBuilder.group({\r\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required],\n        }, {\n                validator: PasswordValidation.MatchPassword // your validation method\n            });\n\n    }\n\n    resetRequest() {\r\n        $('.loader').show();\r\n        if (this.resetReq.valid) {\n            var empEmail = this.resetReq.controls[\"email\"].value;\n            return this.userService.ResetPasswordRequest(this.commonService.baseApiUrl, empEmail).subscribe(\n                data => {\n                    var dataEmp = JSON.stringify(data);\n                    var empParse = JSON.parse(dataEmp);\n                    var empSts = JSON.parse(empParse[\"_body\"]);\n                    if (empSts == true) {\n                        this.showSwal(\"Please check your email!\");\n                        $('.loader').hide();\n                    }\n                    else {\n                        this.showSwal(\"Email not linked!\");\n                    }\n                }\n            );\n        }\r\n        else {\r\n            this.validateAllFormFields(this.resetReq);\r\n        }\r\n    }\n\n    resetPassword() {\r\n        $('.loader').show();\r\n        if (this.resetPwd.valid) {\n            var password = this.resetPwd.controls[\"password\"].value;\n            return this.userService.ResetPassword(this.commonService.baseApiUrl, password, this.requestToken).subscribe(\n                data => {\n                    var dataEmp = JSON.stringify(data);\n                    var empParse = JSON.parse(dataEmp);\n                    var empSts = JSON.parse(empParse[\"_body\"]);\n                    if (empSts == true) {\n                        $('.loader').hide();\n                        this.showSwal(\"Password updated successfully!\");\n                        this.router.navigate(['pages/login']);\n                    }\n                    else {\n                        this.showSwal(\"Password not updated!\");\n                    }\n                }\n            );\n        } else {\r\n            this.validateAllFormFields(this.resetPwd);\r\n        }\r\n    }\n\n    isValidPasswordToken() {\n        return this.userService.IsValidPasswordToken(this.commonService.baseApiUrl, this.requestToken).subscribe(\n            data => {\n                var dataEmp = JSON.stringify(data);\n                var empParse = JSON.parse(dataEmp);\n                var empSts = JSON.parse(empParse[\"_body\"]);\n                if (empSts == false) {\n                    this.showSwal(\"Invalid request!\");\n                    this.router.navigate(['pages/login']);\n                }\n            }\n        );\n    }\n\n    validateAllFormFields(formGroup: FormGroup) {\r\n        Object.keys(formGroup.controls).forEach(field => {\r\n            console.log(field);\r\n            const control = formGroup.get(field);\r\n            if (control instanceof FormControl) {\r\n                control.markAsTouched({ onlySelf: true });\r\n            } else if (control instanceof FormGroup) {\r\n                this.validateAllFormFields(control);\r\n            }\r\n        });\r\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reset-password/reset-password.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ResetPasswordRoutes } from './reset-password.routing';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { FieldErrorDisplayModule } from '../field-error-display/field-error-display.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ResetPasswordRoutes),\n        FormsModule,\n        ReactiveFormsModule,\n        FieldErrorDisplayModule\n    ],\n    declarations: [\n        ResetPasswordComponent\n    ]\n})\n\nexport class ResetPasswordModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/reset-password/reset-password.module.ts","import { Routes } from '@angular/router';\nimport { ResetPasswordComponent } from './reset-password.component';\n\nexport const ResetPasswordRoutes: Routes = [\n    {\n        path: '',\n        children: [{\n            path: '',\n            component: ResetPasswordComponent\n        }]\n    }\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/reset-password/reset-password.routing.ts"],"sourceRoot":"webpack:///"}