{"version":3,"sources":["./src/app/jobs/jobs.component.html","./src/app/jobs/jobs.component.scss","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.module.ts","./src/app/jobs/jobs.routing.ts"],"names":[],"mappings":"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","file":"jobs.module.chunk.js","sourcesContent":["module.exports = \"<style>\\n    .user-alt{position:fixed; bottom:0; right:0; width:450px;z-index:9;}\\n     .dropdownview {\\n        -webkit-appearance: menulist-button;\\n    }\\n</style>\\n<!--<title>Aspect Jobs</title>-->\\n<title>Jobs</title>\\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-content\\\">\\n                        <form [formGroup]=\\\"jobSrcForm\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-2\\\">\\r\\n                                    <ng-container *ngIf=\\\"isSyncAccess == true; else jobText\\\">\\r\\n                                        <button class=\\\"btn btn-facebook btn-round\\\" #jobSyncButton (click)=\\\"addNewSchedulerInQueue()\\\">Sync Jobs</button>\\r\\n                                    </ng-container>\\r\\n                                    <ng-template #jobText>\\r\\n                                        <h3>Jobs</h3>\\r\\n                                    </ng-template>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <select class=\\\"form-control  dropdownview\\\" formControlName=\\\"pManager\\\" (change)=\\\"getJobDetails();\\\">\\r\\n                                        <option selected=\\\"\\\" value=\\\"0\\\">--- Select ProjectManager ---</option>\\r\\n                                        <option *ngFor=\\\"let pm of projectManagerList\\\" value={{pm.ID}}>\\r\\n                                            {{pm.UserName}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <select class=\\\"form-control  dropdownview\\\" formControlName=\\\"division\\\" (change)=\\\"getJobDetails();\\\">\\r\\n                                        <option selected=\\\"\\\" value=\\\"0\\\">--- Select Division ---</option>\\r\\n                                        <option *ngFor=\\\"let div of divisionList; let i = index\\\" [attr.selected]=\\\"i == '0' ? true : null\\\" value={{div.ID}}>\\r\\n                                            {{div.Name}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <select class=\\\"form-control  dropdownview\\\" formControlName=\\\"clientName\\\" (change)=\\\"getJobDetails();\\\">\\r\\n                                        <option selected=\\\"\\\" value=\\\"0\\\">--- Select Clients ---</option>\\r\\n                                        <option *ngFor=\\\"let client of clientList;\\\" value={{client.ClientName}}>\\r\\n                                            {{client.ClientName}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <select class=\\\"form-control  dropdownview\\\" formControlName=\\\"jobStatus\\\" (change)=\\\"getJobDetails();\\\">\\r\\n                                        <option selected=\\\"\\\" value=\\\"0\\\">--- Select Status ---</option>\\r\\n                                        <option *ngFor=\\\"let jStatus of statusList;\\\" value={{jStatus.Status}}>\\r\\n                                            {{jStatus.Status}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <md2-datepicker class=\\\"pd-btm\\\" placeholder=\\\"Date\\\" name=\\\"jobDate\\\" formControlName=\\\"jobDate\\\" (change)=\\\"getJobDetails();\\\" format=\\\"dd-MM-y\\\" type=\\\"date\\\" startView=\\\"month\\\"></md2-datepicker>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                            <div class=\\\"toolbar\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"material-datatables table-responsive\\\">\\r\\n                                <table id=\\\"jobDatatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[0] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[1] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[2] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[3] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[4] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[5] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[6] }}</th>\\r\\n                                            <th class=\\\"disabled-sorting text-right\\\">{{ jobDataTable.jobHeaderRow[7] }}</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let job of jobDataTable.jobDataRows\\\">\\r\\n                                            <!--<td>{{ job.OldJobId }}</td>-->\\r\\n                                            <td>{{ job.JobNumber }}</td>\\r\\n                                            <td>\\r\\n                                                <div *ngIf=\\\"job.CreatedDate\\\">{{ job.CreatedDate | date: 'dd/MM/yyyy'}} </div>\\r\\n                                                <div *ngIf=\\\"!job.CreatedDate\\\">{{ job.CreatedDate }} </div>\\r\\n                                            </td>\\r\\n                                            <td>{{ job.Description }}</td>\\r\\n                                            <td>{{ job.ProjectManager }}</td>\\r\\n                                            <td>{{ job.ClientName }}</td>\\r\\n                                            <td>{{ job.WONumber }}</td>\\r\\n                                            <td>{{ job.Status }}</td>\\r\\n                                            <td class=\\\"text-right\\\">\\r\\n                                                <span *ngIf=\\\"job.IsNew == true\\\">\\r\\n                                                    <button class=\\\"btn btn-success btn-icon edit btn-xs\\\">\\r\\n                                                        New\\r\\n                                                    </button>\\r\\n                                                </span>\\r\\n                                                <!--<span *ngIf=\\\"job.IsNew == false\\\">\\r\\n                                <button class=\\\"btn btn-success btn-icon edit btn-xs\\\">\\r\\n                                    Updated\\r\\n                                </button>\\r\\n                            </span>-->\\r\\n                                                <button class=\\\"btn btn-simple btn-warning btn-icon edit\\\" *ngIf=\\\"isViewAccess == true\\\" (click)=\\\"goToWorkOrder(job.OldJobId)\\\">\\r\\n                                                    <i class=\\\"material-icons\\\">dvr</i>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                                <div class=\\\"col-lg-12 mtb30\\\">\\r\\n                                    <div *ngIf=\\\"joblastSyncDate\\\">\\r\\n                                        <div *ngIf=\\\"joblastSyncDate == 'No Sync'\\\">\\r\\n                                            <label class=\\\"pull-right\\\">last Sync: {{joblastSyncDate }}</label>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"joblastSyncDate != 'No Sync'\\\">\\r\\n                                            <label class=\\\"pull-right\\\">last Sync: {{joblastSyncDate | date: 'dd/MM/yyyy HH:mm:ss' }}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"alert alert-info alert-with-icon user-alt\\\" data-notify=\\\"container\\\" id=\\\"syncStart\\\">\\r\\n    <i class=\\\"material-icons\\\" data-notify=\\\"icon\\\">notifications</i>\\r\\n    <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\">\\r\\n        <i class=\\\"material-icons\\\" (click)=\\\"closeStart();\\\">close</i>\\r\\n    </button>\\r\\n    <span data-notify=\\\"message\\\">Job Sync Currently In Progress - Please Wait.</span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"alert alert-success alert-with-icon user-alt\\\" data-notify=\\\"container\\\" id=\\\"syncCopm\\\">\\r\\n    <i class=\\\"material-icons\\\" data-notify=\\\"icon\\\">notifications</i>\\r\\n    <button type=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"close\\\">\\r\\n        <i class=\\\"material-icons\\\" (click)=\\\"closeEnd();\\\">close</i>\\r\\n    </button>\\r\\n    <span data-notify=\\\"message\\\">Job sync completed. Job added: {{noOfJob}} </span><!--Job sync Completed There Are {{noOfJob}} new Job Added.-->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/jobs/jobs.component.html\n// module id = ./src/app/jobs/jobs.component.html\n// module chunks = jobs.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/jobs/jobs.component.scss\n// module id = ./src/app/jobs/jobs.component.scss\n// module chunks = jobs.module","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Http, Response, RequestOptions, Headers } from \"@angular/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport \"rxjs/Rx\";\nimport { CommonService } from \"../services/commonService\";\nimport { JobsService } from \"../services/jobsService\";\nimport { SchedulerService } from \"../services/schedulerService\";\nimport { SimpleTimer } from 'ng2-simple-timer';\nimport { DivisionService } from \"../services/divisionService\";\nimport { DatePipe } from '@angular/common'\n\nimport swal from 'sweetalert2';\ndeclare interface DataTable {\n    jobHeaderRow: string[];\n    jobFooterRow: string[];\n    jobDataRows: any;\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-jobs',\n    templateUrl: './jobs.component.html',\n    styleUrls: ['./jobs.component.scss'],\n    providers: [CommonService, JobsService, SchedulerService, SimpleTimer, DivisionService, DatePipe]\n})\n\nexport class JobsComponent implements OnInit {\n    public jobDataTable: DataTable;\n    public jobList: any;\n    public joblastSyncDate: any;\n    public timerStart: string;\n    public userProfile: any;\n    public isViewAccess: boolean;\n    public isAddAccess: boolean;\n    public isEditAccess: boolean;\n    public isSyncAccess: boolean;\n    public noOfJob: any;\n    public divisionList: any;\n    //public clientList: any[] = [];\n    public clientList: any;\n    public statusList: any;\n    public projectManagerList: any;\n\n    public jobSrcForm = new FormGroup({\r\n        division: new FormControl(),\n        clientName: new FormControl(),\n        jobStatus: new FormControl(),\n        jobDate: new FormControl(),\n        pManager: new FormControl(),\n    });\n\n    @ViewChild('jobSyncButton') jobSyncButton: ElementRef;\n\n    constructor(\n        private http: Http,\n        private router: Router,\n        private commonService: CommonService,\n        private jobService: JobsService,\n        private schedulerService: SchedulerService,\n        private timer: SimpleTimer,\n        private formBuilder: FormBuilder,\n        private divisionService: DivisionService,\n        public datepipe: DatePipe\n    ) {\n    }\n\n    ngOnInit() {\n        if (JSON.parse(sessionStorage.getItem('LogEmployee')) != null) {\n            let userRoleAccess = JSON.parse(sessionStorage.getItem('AccessRole'));\n            if (userRoleAccess != null) {\n                var jobAccess = userRoleAccess.filter(job => job.ModuleName == \"JOBINFORMATION\");\n                if (jobAccess != null) {\n                    this.isViewAccess = (jobAccess[0].AddAccess == true || jobAccess[0].EditAccess == true ? true : jobAccess[0].ViewAccess);\n                    this.isAddAccess = jobAccess[0].AddAccess;\n                    this.isEditAccess = jobAccess[0].EditAccess;\n                    this.isSyncAccess = jobAccess[0].SyncAccess;\n                }\n            }\n\n            $(document).ready(function () {\n                $('#syncStart').hide();\n                $('#syncCopm').hide();\n            });\n\n\n            if (this.isViewAccess == false) {\n                this.router.navigate(['dashboard']);\n            }\n\n            this.timer.newTimer('1sec', 30);\n            this.userProfile = JSON.parse(sessionStorage.getItem('LogEmployee'));\n            this.getDivisions();\n            this.getJobDetails();\n            this.getRoleBasedJobClient();\n            this.getRoleBasedJobStatus();\n            this.getJobsProjectManager();\n            this.jobDataTable = {\n                jobHeaderRow: ['Job#', 'Date', 'Description', 'Project Manager', 'Client', 'WOs', 'Status', 'Actions'],//'ID'\n                jobFooterRow: ['Job#', 'Date', 'Description', 'Project Manager', 'Client', 'WOs', 'Status', 'Actions'],\n                jobDataRows: this.jobList\n            };\n            this.jobSrcForm.controls[\"division\"].setValue(\"1\");\n            this.jobSrcForm.controls[\"clientName\"].setValue(\"0\");\n            this.jobSrcForm.controls[\"jobStatus\"].setValue(\"0\");\n            this.jobSrcForm.controls[\"pManager\"].setValue(\"0\");\n            //this.jobSrcForm = this.formBuilder.group({\n            //    division: null,\n            //});\n        }\n        else {\n            this.router.navigate(['pages/login']);\n        }\n    }\n\n    isJobsAndWorkOrdersDone() {\n        if (this.timerStart == \"start\") {\n            this.timerStart = this.timer.subscribe('1sec', () => this.GetSchedulerDoneStatus());\n        }\n    }\n    GetSchedulerDoneStatus() {\n        $('.loader').show();\n        $('#syncStart').show();\n        this.schedulerService.GetSchedulerDoneStatus(this.commonService.baseApiUrl, \"2\").subscribe(\n            data => {\n                var dataScheduler = JSON.stringify(data);\n                var schedulerParse = JSON.parse(dataScheduler);\n                var schedulerList = JSON.parse(schedulerParse[\"_body\"]);\n                //localStorage.removeItem(\"JobList\");\n                if (schedulerList == true) {\n                    $('.loader').hide();\n                    this.getJobDetails();\n                    this.timerStart = \"stop\";\n                    $('#syncStart').hide();\n                    $('#syncCopm').show();\n                    this.jobSyncButton.nativeElement.disabled = false;\n                }\n            });\n    }\n\n    addNewSchedulerInQueue() {\n        $('.loader').show();\n        this.schedulerService.AddNewSchedulerInQueue(this.commonService.baseApiUrl, \"2\").subscribe(\n            data => {\n                var dataScheduler = JSON.stringify(data);\n                var schedulerParse = JSON.parse(dataScheduler);\n                var schedulerList = JSON.parse(schedulerParse[\"_body\"]);\n                //localStorage.removeItem(\"JobList\");\n                if (schedulerList == true) {\n                    this.jobSyncButton.nativeElement.disabled = true;\n                    $('.loader').hide();\n                    this.timerStart = \"start\";\n                    this.isJobsAndWorkOrdersDone();\n                }\n            });\n    }\n\n    getDivisions() {\n        $('.loader').show();\n        this.divisionList = null;\n        this.divisionService.GetDivisionForCalendar(this.commonService.baseApiUrl, this.userProfile.ID).subscribe(\n            data => {\n                var dataEmp = JSON.stringify(data);\n                var empParse = JSON.parse(dataEmp);\n                if (empParse[\"_body\"] != null) {\n                    this.divisionList = JSON.parse(empParse[\"_body\"]);\n                }\n                $('.loader').hide();\n            }\n        );\n    }\n\n    getJobsProjectManager() {\n        $('.loader').show();\n        this.projectManagerList = null;\n        this.jobService.GetJobsProjectManager(this.commonService.baseApiUrl).subscribe(\n            data => {\n                var dataEmp = JSON.stringify(data);\n                var empParse = JSON.parse(dataEmp);\n                if (empParse[\"_body\"] != null) {\n                    this.projectManagerList = JSON.parse(empParse[\"_body\"]);\n                }\n                $('.loader').hide();\n            }\n        );\n    }\n\n    getRoleBasedJobClient() {\n        $('.loader').show();\n        this.jobService.GetRoleBasedJobClient(this.commonService.baseApiUrl, this.userProfile.ID).subscribe(\n            data => {\n                var dataDiv = JSON.stringify(data);\n                var divParse = JSON.parse(dataDiv);\n                var divList = JSON.parse(divParse[\"_body\"]);\n                if (divList != null) {\n                    //for (let clt of divList) {\n                    //    var jobJson = { id: clt.ID, itemName: clt.ClientName }\n                    this.clientList = divList;\n                    //}\n                }\n                $('.loader').hide();\n            });\n    }\n\n    getRoleBasedJobStatus() {\n        $('.loader').show();\n        this.jobService.GetRoleBasedJobStatus(this.commonService.baseApiUrl, this.userProfile.ID).subscribe(\n            data => {\n                var dataDiv = JSON.stringify(data);\n                var divParse = JSON.parse(dataDiv);\n                var divList = JSON.parse(divParse[\"_body\"]);\n                if (divList != null) {\n                    //for (let clt of divList) {\n                    //    var jobJson = { id: clt.ID, itemName: clt.ClientName }\n                    this.statusList = divList;\n                    //}\n                }\n                $('.loader').hide();\n            });\n    }\n\n    getJobDetails() {\n        $('.loader').show();\n        var value = {\n            DivisionID: this.jobSrcForm.controls[\"division\"].value,\n            Client: this.jobSrcForm.controls[\"clientName\"].value,\n            Status: this.jobSrcForm.controls[\"jobStatus\"].value,\n            jobDate: this.datepipe.transform(this.jobSrcForm.controls[\"jobDate\"].value, 'yyyy-MM-dd'),\n            ProjectManagerID: this.jobSrcForm.controls[\"pManager\"].value\n        }\n        this.jobService.GetJobDetails(this.commonService.baseApiUrl, this.userProfile.ID, value).subscribe(\n            data => {\n                var dataJobs = JSON.stringify(data);\n                var jobParse = JSON.parse(dataJobs);\n                var jobLists = JSON.parse(jobParse[\"_body\"]);\n                //localStorage.removeItem(\"JobList\");\n                this.jobList = null;\n                if (jobLists != null) {\n                    if (jobLists.length > 0) {\n                        this.joblastSyncDate = jobLists[0].JobSyncDate != null ? jobLists[0].JobSyncDate : \"No Sync\";\n                    }\n                    else {\n                        this.joblastSyncDate = \"No Sync\";\n                    }\n                    $(\"#jobDatatables\").dataTable().fnDestroy();\n                    //localStorage.setItem(\"JobList\", JSON.stringify(jobLists));\n                    this.jobList = jobLists;\n                    let newJobs = jobLists.filter(usr => usr.IsNew == true);\n                    this.noOfJob = newJobs.length;\n\n\n                    this.jobDataTable = {\n                        jobHeaderRow: ['Job#', 'Date', 'Description', 'Project Manager', 'Client', 'WOs', 'Status', 'Actions'],//'ID'\n                        jobFooterRow: ['Job#', 'Date', 'Description', 'Project Manager', 'Client', 'WOs', 'Status', 'Actions'],\n                        jobDataRows: this.jobList\n                    };\n\n                    setTimeout(() => {\n                        $(\"#jobDatatables\").dataTable().fnDestroy();\n                        $('#jobDatatables').DataTable({\n                            'pagingType': 'full_numbers',\n                            'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'All']],\n                            responsive: true,\n                            language: {\n                                search: '_INPUT_',\n                                searchPlaceholder: 'Search records',\n                            }\n\n                        });\n\n                        const tableJob = $('#jobDatatables').DataTable();\n\n                        // Edit record\n                        tableJob.on('click', '.edit', function () {\n\n                        });\n\n                        // Delete a record\n                        tableJob.on('click', '.remove', function (e: any) {\n                            const $trJob = $(this).closest('tr');\n                            tableJob.row($trJob).remove().draw();\n                            e.preventDefault();\n                        });\n\n                        // Like record\n                        tableJob.on('click', '.like', function () {\n                            alert('You clicked on Like button');\n                        });\n\n                    }, 10);\n\n                    $('.loader').hide();\n                }\n            }\n        );\n    }\n\n    goToWorkOrder(jobId: any) {\n        this.router.navigate(['work-order'], { queryParams: { jobID: jobId } });\n    }\n\n    closeStart() {\n        $('#syncStart').hide();\n    }\n\n    closeEnd() {\n        $('#syncCopm').hide();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs/jobs.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JobsRoutes } from './jobs.routing';\nimport { JobsComponent } from './jobs.component';\nimport { MaterialModule } from '../app.module';\nimport { Md2DatepickerModule, MdNativeDateModule } from 'md2';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(JobsRoutes),\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        Md2DatepickerModule,\n        MdNativeDateModule\n    ],\n    declarations: [\n        JobsComponent\n    ]\n})\n\nexport class JobsModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs/jobs.module.ts","import { Routes } from '@angular/router';\nimport { JobsComponent } from './jobs.component';\n\nexport const JobsRoutes: Routes = [\n    {\n        path: '',\n        children: [{\n            path: '',\n            component: JobsComponent\n        }]\n    }\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs/jobs.routing.ts"],"sourceRoot":"webpack:///"}