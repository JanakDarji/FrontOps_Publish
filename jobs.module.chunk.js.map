{"version":3,"sources":["./node_modules/angular2-uuid/index.js","./node_modules/ng2-simple-timer/index.js","./node_modules/ng2-simple-timer/lib/simple-timer.js","./src/app/jobs/jobs.component.html","./src/app/jobs/jobs.component.scss","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.module.ts","./src/app/jobs/jobs.routing.ts","./src/app/services/jobsService.ts","./src/app/services/schedulerService.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;ACpCA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,wC;;;;;;;ACpEA,kWAAkW,m1BAAm1B,gCAAgC,2DAA2D,gCAAgC,2DAA2D,gCAAgC,2DAA2D,gCAAgC,2DAA2D,gCAAgC,2DAA2D,gCAAgC,iGAAiG,gCAAgC,8SAA8S,gBAAgB,8DAA8D,iBAAiB,8IAA8I,uCAAuC,6FAA6F,mBAAmB,kHAAkH,mBAAmB,2DAA2D,kBAAkB,2DAA2D,gBAAgB,2DAA2D,cAAc,+pDAA+pD,kBAAkB,2OAA2O,gDAAgD,6R;;;;;;;ACAjwJ,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyE;AAED;AAE2B;AAClF;AACyC;AACJ;AACU;AACjB;AAkB/C;IAaI,uBACY,IAAU,EACV,MAAc,EACd,aAA4B,EAC5B,UAAuB,EACvB,gBAAkC,EAClC,KAAkB;QALlB,SAAI,GAAJ,IAAI,CAAM;QACV,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,eAAU,GAAV,UAAU,CAAa;QACvB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAA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","file":"jobs.module.chunk.js","sourcesContent":["\"use strict\";\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular2-uuid/index.js\n// module id = ./node_modules/angular2-uuid/index.js\n// module chunks = jobs.module","exports.SimpleTimer = require('./lib/simple-timer').SimpleTimer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ng2-simple-timer/index.js\n// module id = ./node_modules/ng2-simple-timer/index.js\n// module chunks = jobs.module","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Rx_1 = require(\"rxjs/Rx\");\nvar angular2_uuid_1 = require(\"angular2-uuid\");\nvar SimpleTimer = (function () {\n    function SimpleTimer() {\n        this.timer = {};\n        this.subscription = {};\n    }\n    SimpleTimer.prototype.getTimer = function () {\n        return Object.keys(this.timer);\n    };\n    SimpleTimer.prototype.getSubscription = function () {\n        return Object.keys(this.subscription);\n    };\n    SimpleTimer.prototype.newTimer = function (name, sec) {\n        if (name === undefined || sec === undefined || this.timer[name]) {\n            return false;\n        }\n        var o = Rx_1.Observable.timer(0, sec * 1000);\n        this.timer[name] = { second: sec, observable: o };\n        return true;\n    };\n    SimpleTimer.prototype.delTimer = function (name) {\n        var _this = this;\n        if (name === undefined || !this.timer[name]) {\n            return false;\n        }\n        var s = this.getSubscription();\n        s.forEach(function (i) {\n            if (_this.subscription[i].name === name) {\n                _this.unsubscribe(i);\n            }\n        });\n        delete this.timer[name].observable;\n        delete this.timer[name];\n    };\n    SimpleTimer.prototype.subscribe = function (name, callback) {\n        if (!this.timer[name]) {\n            return '';\n        }\n        var id = name + '-' + angular2_uuid_1.UUID.UUID();\n        this.subscription[id] = {\n            name: name,\n            subscription: this.timer[name].observable.subscribe(callback)\n        };\n        return id;\n    };\n    SimpleTimer.prototype.unsubscribe = function (id) {\n        if (!id || !this.subscription[id]) {\n            return false;\n        }\n        this.subscription[id].subscription.unsubscribe();\n        delete this.subscription[id];\n    };\n    return SimpleTimer;\n}());\nSimpleTimer = __decorate([\n    core_1.Injectable()\n], SimpleTimer);\nexports.SimpleTimer = SimpleTimer;\n//# sourceMappingURL=simple-timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ng2-simple-timer/lib/simple-timer.js\n// module id = ./node_modules/ng2-simple-timer/lib/simple-timer.js\n// module chunks = jobs.module","module.exports = \"\\r\\n<title>Aspect Jobs</title>\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-content\\\">\\r\\n                        <ng-container *ngIf=\\\"isSyncAccess == true; else jobText\\\">\\r\\n                            <button class=\\\"btn btn-facebook btn-round\\\" #jobSyncButton (click)=\\\"addNewSchedulerInQueue()\\\">Sync Jobs</button>\\r\\n                            </ng-container>\\r\\n                        <ng-template #jobText>\\r\\n                            <h3>Jobs</h3>\\r\\n                        </ng-template>\\r\\n                            <div class=\\\"toolbar\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"material-datatables table-responsive\\\">\\r\\n                                <table id=\\\"jobDatatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[0] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[1] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[2] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[3] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[4] }}</th>\\r\\n                                            <th>{{ jobDataTable.jobHeaderRow[5] }}</th>\\r\\n                                            <th class=\\\"disabled-sorting text-right\\\">{{ jobDataTable.jobHeaderRow[6] }}</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let job of jobDataTable.jobDataRows\\\">\\r\\n                                            <!--<td>{{ job.OldJobId }}</td>-->\\r\\n                                            <td>{{ job.JobNumber }}</td>\\r\\n                                            <td>\\r\\n                                                <div *ngIf=\\\"job.CreatedDate\\\">{{ job.CreatedDate | date: 'dd/MM/yyyy'}} </div>\\r\\n                                                <div *ngIf=\\\"!job.CreatedDate\\\">{{ job.CreatedDate }} </div>\\r\\n                                            </td>\\r\\n                                            <td>{{ job.Description }}</td>\\r\\n                                            <td>{{ job.ClientName }}</td>\\r\\n                                            <td>{{ job.WONumber }}</td>\\r\\n                                            <td>{{ job.Status }}</td>\\r\\n                                            <td class=\\\"text-right\\\">\\r\\n                                                <span *ngIf=\\\"job.IsNew == true\\\">\\r\\n                                                    <button class=\\\"btn btn-success btn-icon edit btn-xs\\\">\\r\\n                                                        New\\r\\n                                                    </button>\\r\\n                                                </span>\\r\\n                                                <!--<span *ngIf=\\\"job.IsNew == false\\\">\\r\\n                                                    <button class=\\\"btn btn-success btn-icon edit btn-xs\\\">\\r\\n                                                        Updated\\r\\n                                                    </button>\\r\\n                                                </span>-->\\r\\n                                                <button class=\\\"btn btn-simple btn-warning btn-icon edit\\\" *ngIf=\\\"isViewAccess == true\\\" (click)=\\\"goToWorkOrder(job.OldJobId)\\\">\\r\\n                                                    <i class=\\\"material-icons\\\">dvr</i>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                                <div class=\\\"col-lg-12\\\">\\r\\n                                    <div *ngIf=\\\"joblastSyncDate\\\">\\r\\n                                        <div *ngIf=\\\"joblastSyncDate == 'No Sync'\\\">\\r\\n                                            <label class=\\\"pull-right\\\">last Sync: {{joblastSyncDate }}</label>\\r\\n                                        </div>\\r\\n                                        <div *ngIf=\\\"joblastSyncDate != 'No Sync'\\\">\\r\\n                                            <label class=\\\"pull-right\\\">last Sync: {{joblastSyncDate | date: 'dd/MM/yyyy HH:mm:ss' }}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/jobs/jobs.component.html\n// module id = ./src/app/jobs/jobs.component.html\n// module chunks = jobs.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/jobs/jobs.component.scss\n// module id = ./src/app/jobs/jobs.component.scss\n// module chunks = jobs.module","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Http, Response, RequestOptions, Headers } from \"@angular/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport \"rxjs/Rx\";\nimport { CommonService } from \"../services/commonService\";\nimport { JobsService } from \"../services/jobsService\";\nimport { SchedulerService } from \"../services/schedulerService\";\nimport { SimpleTimer } from 'ng2-simple-timer';\n\nimport swal from 'sweetalert2';\ndeclare interface DataTable {\n    jobHeaderRow: string[];\n    jobFooterRow: string[];\n    jobDataRows: any;\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-jobs',\n    templateUrl: './jobs.component.html',\n    styleUrls: ['./jobs.component.scss'],\n    providers: [CommonService, JobsService, SchedulerService, SimpleTimer]\n})\n\nexport class JobsComponent implements OnInit {\n    public jobDataTable: DataTable;\n    public jobList: any;\n    public joblastSyncDate: any;\n    public timerStart: string;\n\n    public isViewAccess: boolean;\n    public isAddAccess: boolean;\n    public isEditAccess: boolean;\n    public isSyncAccess: boolean;\n\n    @ViewChild('jobSyncButton') jobSyncButton: ElementRef;\n\n    constructor(\n        private http: Http,\n        private router: Router,\n        private commonService: CommonService,\n        private jobService: JobsService,\n        private schedulerService: SchedulerService,\n        private timer: SimpleTimer\n    ) {\n    }\n\n    ngOnInit() {\n        if (JSON.parse(sessionStorage.getItem('LogEmployee')) != null) {\n            let userRoleAccess = JSON.parse(sessionStorage.getItem('AccessRole'));\n            if (userRoleAccess != null) {\n                var jobAccess = userRoleAccess.filter(job => job.ModuleName == \"JOBINFORMATION\");\n                if (jobAccess != null) {\n                    this.isViewAccess = (jobAccess[0].AddAccess == true || jobAccess[0].EditAccess == true ? true : jobAccess[0].ViewAccess);\n                    this.isAddAccess = jobAccess[0].AddAccess;\n                    this.isEditAccess = jobAccess[0].EditAccess;\n                    this.isSyncAccess = jobAccess[0].SyncAccess;\n                }\n            }\n\n            if (this.isViewAccess == false) {\n                this.router.navigate(['dashboard']);\n            }\n\n            this.timer.newTimer('1sec', 30);\n            this.getJobDetails();\n            this.jobDataTable = {\n                jobHeaderRow: ['Job#', 'Date', 'Description', 'Client', 'WOs', 'Status', 'Actions'],//'ID'\r\n                jobFooterRow: ['Job#', 'Date', 'Description', 'Client', 'WOs', 'Status', 'Actions'],\n                jobDataRows: this.jobList\n            };\n        }\n        else {\n            this.router.navigate(['pages/login']);\n        }\n    }\n\n    isJobsAndWorkOrdersDone() {\n        if (this.timerStart == \"start\") {\n            this.timerStart = this.timer.subscribe('1sec', () => this.GetSchedulerDoneStatus());\n        }\n    }\n    GetSchedulerDoneStatus() {\n        $('.loader').show();\n        this.schedulerService.GetSchedulerDoneStatus(this.commonService.baseApiUrl, \"2\").subscribe(\n            data => {\n                var dataScheduler = JSON.stringify(data);\n                var schedulerParse = JSON.parse(dataScheduler);\n                var schedulerList = JSON.parse(schedulerParse[\"_body\"]);\n                //localStorage.removeItem(\"JobList\");\n                if (schedulerList == true) {\n                    $('.loader').hide();\n                    this.getJobDetails();\n                    this.timerStart = \"stop\";\n                    this.jobSyncButton.nativeElement.disabled = false;\n                }\r\n            });\n    }\n\n    addNewSchedulerInQueue() {\n        $('.loader').show();\n        this.schedulerService.AddNewSchedulerInQueue(this.commonService.baseApiUrl, \"2\").subscribe(\n            data => {\n                var dataScheduler = JSON.stringify(data);\n                var schedulerParse = JSON.parse(dataScheduler);\n                var schedulerList = JSON.parse(schedulerParse[\"_body\"]);\n                //localStorage.removeItem(\"JobList\");\n                if (schedulerList == true) {\n                    this.jobSyncButton.nativeElement.disabled = true;\n                    $('.loader').hide();\n                    this.timerStart = \"start\";\n                    this.isJobsAndWorkOrdersDone();\n                }\r\n            });\n    }\n\n    getJobDetails() {\n        $('.loader').show();\n        this.jobService.GetJobDetails(this.commonService.baseApiUrl).subscribe(\n            data => {\n                var dataJobs = JSON.stringify(data);\n                var jobParse = JSON.parse(dataJobs);\n                var jobLists = JSON.parse(jobParse[\"_body\"]);\n                //localStorage.removeItem(\"JobList\");\n                this.jobList = null;\n                if (jobLists != null) {\n                    if (jobLists.length > 0) {\n                        this.joblastSyncDate = jobLists[0].JobSyncDate != null ? jobLists[0].JobSyncDate : \"No Sync\";\n                    }\n                    else {\n                        this.joblastSyncDate = \"No Sync\";\n                    }\n                    $(\"#jobDatatables\").dataTable().fnDestroy();\n                    //localStorage.setItem(\"JobList\", JSON.stringify(jobLists));\n                    this.jobList = jobLists;\n\n                    this.jobDataTable = {\n                        jobHeaderRow: ['Job#', 'Date', 'Description', 'Client', 'WOs', 'Status', 'Actions'],//'ID'\r\n                        jobFooterRow: ['Job#', 'Date', 'Description', 'Client', 'WOs', 'Status', 'Actions'],\n                        jobDataRows: this.jobList\n                    };\n\n                    setTimeout(() => {\n                        $(\"#jobDatatables\").dataTable().fnDestroy();\n                        $('#jobDatatables').DataTable({\n                            'pagingType': 'full_numbers',\n                            'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'All']],\n                            responsive: true,\n                            language: {\n                                search: '_INPUT_',\n                                searchPlaceholder: 'Search records',\n                            }\n\n                        });\n\n                        const tableJob = $('#jobDatatables').DataTable();\n\n                        // Edit record\n                        tableJob.on('click', '.edit', function () {\n\n                        });\n\n                        // Delete a record\n                        tableJob.on('click', '.remove', function (e: any) {\n                            const $trJob = $(this).closest('tr');\n                            tableJob.row($trJob).remove().draw();\n                            e.preventDefault();\n                        });\n\n                        // Like record\n                        tableJob.on('click', '.like', function () {\n                            alert('You clicked on Like button');\n                        });\n\n                    }, 10);\n\n                    $('.loader').hide();\n                }\n            }\n        );\n    }\n\n    goToWorkOrder(jobId: any) {\n        this.router.navigate(['work-order'], { queryParams: { jobID: jobId } });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs/jobs.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JobsRoutes } from './jobs.routing';\nimport { JobsComponent } from './jobs.component';\nimport { MaterialModule } from '../app.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(JobsRoutes),\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule\n    ],\n    declarations: [\n        JobsComponent\n    ]\n})\n\nexport class JobsModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs/jobs.module.ts","import { Routes } from '@angular/router';\nimport { JobsComponent } from './jobs.component';\n\nexport const JobsRoutes: Routes = [\n    {\n        path: '',\n        children: [{\n            path: '',\n            component: JobsComponent\n        }]\n    }\n];\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs/jobs.routing.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class JobsService {\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    GetJobDetails(baseurl) {\r\n        return this.http.get(baseurl + \"GetJobDetails/\");\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/jobsService.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class SchedulerService {\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    AddNewSchedulerInQueue(baseurl, contact) {\r\n        return this.http.post(baseurl + \"AddNewSchedulerInQueue/\" + contact, null);\r\n    };\r\n\r\n    GetSchedulerDoneStatus(baseurl, contact) {\r\n        return this.http.get(baseurl + \"GetSchedulerDoneStatus/\" + contact);\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/schedulerService.ts"],"sourceRoot":"webpack:///"}